import type { FirmwareContext } from '@/features/firmware/types/firmware.ts';

export const tiltSenseMaxHardware: string[] = [
  `psram:`,
  `  mode: octal`,
  `  speed: 80MHz`,
  ``,
  `spi:`,
  `  clk_pin: GPIO02`,
  `  mosi_pin: GPIO01`,
  ``,
  `output:`,
  `  - platform: ledc`,
  `    pin: GPIO06`,
  `    id: backlight_output`,
  ``,
  `display:`,
  `  - platform: st7701s`,
  `    id: lcd_display`,
  `    color_order: bgr`,
  `    dimensions:`,
  `      width: 480`,
  `      height: 480`,
  `    cs_pin:`,
  `      pca9554: p_c_a`,
  `      number: 2`,
  `    reset_pin:`,
  `      pca9554: p_c_a`,
  `      number: 0`,
  `    de_pin: GPIO40`,
  `    hsync_pin: GPIO38`,
  `    vsync_pin: GPIO39`,
  `    pclk_pin: GPIO41`,
  `    init_sequence:`,
  `      - [ 0xFF, 0x77, 0x01, 0x00, 0x00, 0x13 ]`,
  `      - [ 0xEF, 0x08 ]`,
  `      - [ 0xFF, 0x77, 0x01, 0x00, 0x00, 0x10 ]`,
  `      - [ 0xC0, 0x3B, 0x00 ]`,
  `      - [ 0xC1, 0x10, 0x0C ]`,
  `      - [ 0xC2, 0x07, 0x0A ]`,
  `      - [ 0xC7, 0x00 ]`,
  `      - [ 0xCC, 0x10 ]`,
  `      - [ 0xCD, 0x08 ]`,
  `      - [ 0xB0, 0x05, 0x12, 0x98, 0x0E, 0x0F, 0x07, 0x07, 0x09, 0x09, 0x23, 0x05, 0x52, 0x0F, 0x67, 0x2C, 0x11 ]`,
  `      - [ 0xB1, 0x0B, 0x11, 0x97, 0x0C, 0x12, 0x06, 0x06, 0x08, 0x08, 0x22, 0x03, 0x51, 0x11, 0x66, 0x2B, 0x0F ]`,
  `      - [ 0xFF, 0x77, 0x01, 0x00, 0x00, 0x11 ]`,
  `      - [ 0xB0, 0x5D ]`,
  `      - [ 0xB1, 0x3E ]`,
  `      - [ 0xB2, 0x81 ]`,
  `      - [ 0xB3, 0x80 ]`,
  `      - [ 0xB5, 0x4E ]`,
  `      - [ 0xB7, 0x85 ]`,
  `      - [ 0xB8, 0x20 ]`,
  `      - [ 0xC1, 0x78 ]`,
  `      - [ 0xC2, 0x78 ]`,
  `      - [ 0xD0, 0x88 ]`,
  `      - [ 0xE0, 0x00, 0x00, 0x02 ]`,
  `      - [ 0xE1, 0x06, 0x30, 0x08, 0x30, 0x05, 0x30, 0x07, 0x30, 0x00, 0x33, 0x33 ]`,
  `      - [ 0xE2, 0x11, 0x11, 0x33, 0x33, 0xF4, 0x00, 0x00, 0x00, 0xF4, 0x00, 0x00, 0x00 ]`,
  `      - [ 0xE3, 0x00, 0x00, 0x11, 0x11 ]`,
  `      - [ 0xE4, 0x44, 0x44 ]`,
  `      - [ 0xE5, 0x0D, 0xF5, 0x30, 0xF0, 0x0F, 0xF7, 0x30, 0xF0, 0x09, 0xF1, 0x30, 0xF0, 0x0B, 0xF3, 0x30, 0xF0 ]`,
  `      - [ 0xE6, 0x00, 0x00, 0x11, 0x11 ]`,
  `      - [ 0xE7, 0x44, 0x44 ]`,
  `      - [ 0xE8, 0x0C, 0xF4, 0x30, 0xF0, 0x0E, 0xF6, 0x30, 0xF0, 0x08, 0xF0, 0x30, 0xF0, 0x0A, 0xF2, 0x30, 0xF0 ]`,
  `      - [ 0xE9, 0x36, 0x01 ]`,
  `      - [ 0xEB, 0x00, 0x01, 0xE4, 0xE4, 0x44, 0x88, 0x40 ]`,
  `      - [ 0xED, 0xFF, 0x10, 0xAF, 0x76, 0x54, 0x2B, 0xCF, 0xFF, 0xFF, 0xFC, 0xB2, 0x45, 0x67, 0xFA, 0x01, 0xFF ]`,
  `      - [ 0xEF, 0x08, 0x08, 0x08, 0x45, 0x3F, 0x54 ]`,
  `      - [ 0xFF, 0x77, 0x01, 0x00, 0x00, 0x00 ]`,
  `      - delay 120ms`,
  `      - [ 0x11 ]`,
  `      - delay 120ms`,
  `      - [ 0x3A, 0x66 ]`,
  `      - [ 0x36, 0x00 ]`,
  `      - [ 0x35, 0x00 ]`,
  `      - [ 0x29 ]`,
  `    data_pins:`,
  `      red: [ 46, 3, 8, 18, 17 ]`,
  `      green: [ 14, 13, 12, 11, 10, 9 ]`,
  `      blue: [ 5, 45, 48, 47, 21 ]`,
  ``,
  `i2c:`,
  `  sda: GPIO15`,
  `  scl: GPIO07`,
  ``,
  `pca9554:`,
  `  id: p_c_a`,
  `  address: 0x20`,
  ``,
  `touchscreen:`,
  `  platform: gt911`,
  `  id: tiltsense_touchscreen`,
  `  interrupt_pin: GPIO16`,
  `  reset_pin:`,
  `    pca9554: p_c_a`,
  `    number: 1`,
  `  on_touch:`,
  `    then:`,
  `      - lambda: |-`,
  `          int x = touch.x;`,
  `          int y = touch.y;`,
  ``,
  `          id(last_touch_x) = x;`,
  `          id(last_touch_y) = y;`,
  `          id(handle_touch).execute();`,
  ``,
];

const batteryCalibration: number[][] = [
  [1.49, 4.16],
  [1.26, 4.01],
  [1.2, 3.95],
  [1.07, 3.9],
  [1.04, 3.83],
  [1.02, 3.78],
  [1.0, 3.71],
  [0.96, 3.61],
];

export function getTiltSenseMaxInternalBattery(context: FirmwareContext): string[] {
  return [
    `  - platform: adc`,
    `    pin: GPIO04`,
    `    name: "${context.firmwareOptions.friendlyName} Battery Voltage"`,
    `    id: battery_voltage`,
    `    unit_of_measurement: "V"`,
    `    accuracy_decimals: 1`,
    `    device_class: voltage`,
    `    entity_category: diagnostic`,
    `    update_interval: 30s`,
    `    attenuation: auto`,
    `    filters:`,
    `      - calibrate_linear:`,
    ...batteryCalibration.map(([from, to]) => `          - ${from} -> ${to}`),
  ];
}
