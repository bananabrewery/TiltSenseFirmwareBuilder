import type { DeviceConstants, FirmwareContext } from '@/features/firmware/types/firmware.ts';

export const tiltSenseConstants: DeviceConstants = {
  bottomScreenThreshold: 220,
  swipeLeftThreshold: 60,
  swipeRightThreshold: 180,
};

export const tiltSenseHardware: string[] = [
  `psram:`,
  `  mode: quad`,
  `  speed: 80MHz`,
  ``,
  `spi:`,
  `  clk_pin: GPIO10`,
  `  mosi_pin: GPIO11`,
  ``,
  `output:`,
  `  - platform: ledc`,
  `    pin: GPIO02`,
  `    id: backlight_output`,
  ``,
  `display:`,
  `  - platform: ili9xxx`,
  `    model: GC9A01A`,
  `    id: lcd_display`,
  `    invert_colors: true`,
  `    data_rate: 80MHz`,
  `    cs_pin: GPIO09`,
  `    dc_pin: GPIO08`,
  `    reset_pin: GPIO14`,
  `    auto_clear_enabled: false`,
  `    rotation: 0`,
  ``,
  `i2c:`,
  `  sda: GPIO06`,
  `  scl: GPIO07`,
  ``,
  `touchscreen:`,
  `  platform: cst816`,
  `  id: tiltsense_touchscreen`,
  `  interrupt_pin: GPIO05`,
  `  reset_pin: GPIO13`,
  `  on_touch:`,
  `    then:`,
  `      - lambda: |-`,
  `          int x = touch.x;`,
  `          int y = touch.y;`,
  ``,
  `          id(last_touch_x) = x;`,
  `          id(last_touch_y) = y;`,
  `          id(handle_touch).execute();`,
  ``,
];

const batteryCalibration: number[][] = [
  [1.49, 4.16],
  [1.26, 4.01],
  [1.2, 3.95],
  [1.07, 3.9],
  [1.04, 3.83],
  [1.02, 3.78],
  [1.0, 3.71],
  [0.96, 3.61],
];

export function getTiltSenseInternalBattery(context: FirmwareContext): string[] {
  return [
    `  - platform: adc`,
    `    pin: GPIO01`,
    `    name: "${context.firmwareOptions.friendlyName} Battery Voltage"`,
    `    id: battery_voltage`,
    `    unit_of_measurement: "V"`,
    `    accuracy_decimals: 1`,
    `    device_class: voltage`,
    `    entity_category: diagnostic`,
    `    update_interval: 30s`,
    `    attenuation: auto`,
    `    filters:`,
    `      - calibrate_linear:`,
    ...batteryCalibration.map(([from, to]) => `          - ${from} -> ${to}`),
  ];
}
